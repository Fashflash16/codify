{"version":3,"sources":["logo.svg","components/WindowHeader.tsx","components/CodeEditor.tsx","components/CaptureStage.tsx","Header.tsx","Footer.tsx","components/Picker.tsx","components/ColorPicker.tsx","components/LanguagePicker.tsx","components/ToolbarToggle.tsx","components/OSPicker.tsx","components/FontPicker.tsx","components/TemplatePreview.tsx","components/TemplatePicker.tsx","Toolbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","spacing","createStyles","root","display","transition","macOS","backgroundColor","grey","backgroundImage","windows10","justifyContent","linuxMint","padding","macOSDivider","macButton","mintDivider","windowsDivider","dot","borderRadius","margin","height","width","green","yellow","red","square","spaceMint","spaceWindows","windowsClose","color","WindowHeader","className","variant","classes","cx","IconButton","size","style","fontSize","Divider","transform","flexDirection","overflow","marginBottom","content","flex","dark","CodeEditor","options","os","language","showLineNumbers","Paper","elevation","value","selectOnLineNumbers","lineNumbers","minimap","enabled","CaptureStage","React","forwardRef","ref","Typography","gutterBottom","contentEditable","spellCheck","suppressContentEditableWarning","fontColor","fontFamily","withStyles","alignItems","borderBottom","title","marginLeft","hide","useState","darkMode","setDarkMode","alt","src","logo","Tooltip","placement","onClick","mode","href","target","borderTop","divider","version","Date","getFullYear","rel","orientation","palette","button","children","id","icon","tooltip","anchorEl","setAnchorEl","open","Boolean","popoverId","undefined","aria-describedby","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","onChange","e","hex","list","maxHeight","listSubheader","background","paper","languages","setLanguages","useEffect","monaco","init","then","getLanguages","map","aliases","alias","length","catch","error","console","List","component","aria-labelledby","subheader","ListSubheader","ListItem","selected","key","ListItemText","ToolbarToggle","active","activeIcon","inactiveIcon","fontFamilies","font","editor","opacity","TemplatePreview","Button","templates","flexWrap","template","captureStageContainer","placeItems","justifyItems","borderLeft","fab","position","bottom","right","App","stageRef","useRef","setOptions","Fab","elm","current","domtoimage","toJpeg","offsetHeight","offsetWidth","quality","dataUrl","link","document","createElement","download","now","click","window","location","hostname","match","ReactDOM","render","StrictMode","theme","themeType","unstable_createMuiStrictModeTheme","primary","main","secondary","type","muiTheme","CssBaseline","SnackbarProps","autoHideDuration","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f5e72d5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.20d88375.svg\";","import React from \"react\";\nimport { createStyles, Divider, IconButton, Theme } from \"@material-ui/core\";\nimport cx from \"classnames\";\nimport { grey, red } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuSwap,\n  WindowMinimize,\n  SquareOutline,\n  WindowClose,\n  CloseCircle,\n} from \"mdi-material-ui\";\n\nconst useStyles = makeStyles(({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      transition: \"all 0.3s\",\n    },\n    macOS: {\n      backgroundColor: grey[300],\n      backgroundImage: `linear-gradient(to bottom, #cecece, #b7b7b7)`,\n    },\n    windows10: {\n      backgroundColor: \"#fff\",\n      justifyContent: \"flex-end\",\n    },\n    linuxMint: {\n      backgroundImage: `linear-gradient(to right, #444444, #303030)`,\n      justifyContent: \"flex-end\",\n      padding: spacing(0.5),\n    },\n    macOSDivider: {\n      backgroundColor: \"#141414\",\n    },\n    macButton: {\n      padding: spacing(0.25),\n    },\n    mintDivider: {\n      backgroundColor: \"#141414\",\n    },\n    windowsDivider: {\n      backgroundColor: grey[300],\n    },\n    dot: {\n      borderRadius: \"50%\",\n      margin: spacing(0.3),\n      height: spacing(1.125),\n      width: spacing(1.125),\n    },\n    green: {\n      backgroundColor: \"#54C22B\",\n    },\n    yellow: {\n      backgroundColor: \"#E6C029\",\n    },\n    red: {\n      backgroundColor: \"#FF5B51\",\n    },\n    square: {\n      borderRadius: 0,\n      padding: spacing(1, 2, 1, 2),\n    },\n    spaceMint: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: spacing(10),\n    },\n    spaceWindows: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: spacing(20),\n    },\n    windowsClose: {\n      \"&:hover\": {\n        backgroundColor: red[500],\n        color: \"white\",\n      },\n    },\n  })\n);\n\ninterface Props {\n  className?: string;\n  variant?: \"macOS\" | \"windows10\" | \"linuxMint\";\n}\n\nconst WindowHeader = ({ className, variant }: Props) => {\n  const classes = useStyles();\n\n  switch (variant) {\n    case \"macOS\":\n      return (\n        <div className={cx(classes.root, classes.macOS, className)}>\n          <IconButton className={classes.macButton}>\n            <div className={cx(classes.dot, classes.red)} />\n          </IconButton>\n          <IconButton className={classes.macButton}>\n            <div className={cx(classes.dot, classes.yellow)} />\n          </IconButton>\n          <IconButton className={classes.macButton}>\n            <div className={cx(classes.dot, classes.green)} />\n          </IconButton>\n        </div>\n      );\n    case \"windows10\":\n      return (\n        <>\n          <div className={cx(classes.root, classes.windows10, className)}>\n            <div className={classes.spaceWindows}>\n              <IconButton size={\"small\"} className={classes.square}>\n                <WindowMinimize style={{ fontSize: 18 }} />\n              </IconButton>\n              <IconButton size={\"small\"} className={classes.square}>\n                <SquareOutline style={{ fontSize: 16 }} />\n              </IconButton>\n              <IconButton\n                size={\"small\"}\n                className={cx(classes.square, classes.windowsClose)}\n              >\n                <WindowClose style={{ fontSize: 18 }} />\n              </IconButton>\n            </div>\n          </div>\n          <Divider className={classes.windowsDivider} />\n        </>\n      );\n    case \"linuxMint\":\n      return (\n        <>\n          <div className={cx(classes.root, classes.linuxMint, className)}>\n            <div className={classes.spaceMint}>\n              <IconButton size={\"small\"}>\n                <WindowMinimize\n                  fontSize={\"small\"}\n                  style={{ color: \"#878787\", fontSize: 14 }}\n                />\n              </IconButton>\n              <IconButton size={\"small\"}>\n                <MenuSwap\n                  fontSize={\"small\"}\n                  style={{\n                    color: \"#878787\",\n                    fontSize: 18,\n                    transform: `rotate(45deg)`,\n                  }}\n                />\n              </IconButton>\n              <IconButton size={\"small\"}>\n                <CloseCircle style={{ color: \"#78b375\", fontSize: 14 }} />\n              </IconButton>\n            </div>\n          </div>\n          <Divider className={classes.mintDivider} />\n        </>\n      );\n    default:\n      return <div className={cx(classes.root, className)} />;\n  }\n};\n\nexport default WindowHeader;\n","import React from \"react\";\nimport { Paper, makeStyles, Theme } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport Editor from \"@monaco-editor/react\";\nimport WindowHeader from \"./WindowHeader\";\nimport { Options } from \"../interfaces\";\n\nconst useStyles = makeStyles(({ spacing }: Theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    width: 700,\n    height: 320,\n    backgroundColor: grey[700],\n    marginBottom: spacing(2),\n  },\n  content: {\n    flex: 1,\n  },\n  dark: {\n    backgroundColor: \"#54799D\",\n  },\n}));\n\ninterface Props {\n  options: Options;\n}\n\nconst CodeEditor = ({ options: { os, language, showLineNumbers } }: Props) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root} elevation={15}>\n      <WindowHeader variant={os} />\n      <div className={classes.content}>\n        <Editor\n          height={\"300px\"}\n          width={\"700px\"}\n          language={language}\n          value={`const fun = () => {\n  console.log(\"Hello World!\")\n}`}\n          options={{\n            selectOnLineNumbers: false,\n            lineNumbers: showLineNumbers ? \"on\" : \"off\",\n            minimap: { enabled: false },\n          }}\n        />\n      </div>\n    </Paper>\n  );\n};\n\nexport default CodeEditor;\n","import React from \"react\";\nimport { Paper, makeStyles, Typography } from \"@material-ui/core\";\nimport cx from \"classnames\";\nimport CodeEditor from \"./CodeEditor\";\nimport { Options } from \"../interfaces\";\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  root: {\n    padding: spacing(8),\n    transition: \"all 0.3s\",\n  },\n}));\n\ninterface Props {\n  className?: string;\n  options: Options;\n}\n\nconst CaptureStage = React.forwardRef(({ className, options }: Props, ref) => {\n  const classes = useStyles();\n\n  return (\n    <Paper\n      ref={ref}\n      className={cx(classes.root, className)}\n      elevation={0}\n      square\n      style={{\n        backgroundColor: options.backgroundColor,\n      }}\n    >\n      <Typography\n        variant={\"h3\"}\n        gutterBottom\n        contentEditable\n        spellCheck={false}\n        suppressContentEditableWarning\n        style={{ color: options.fontColor, fontFamily: options.fontFamily }}\n      >\n        Edit this cool title\n      </Typography>\n      <CodeEditor options={options} />\n    </Paper>\n  );\n});\n\nexport default CaptureStage;\n","import React, { useState } from \"react\";\nimport {\n  createStyles,\n  IconButton,\n  Theme,\n  Tooltip,\n  Typography,\n  WithStyles,\n  withStyles,\n} from \"@material-ui/core\";\nimport cx from \"classnames\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { Github, Lightbulb, LightbulbOutline } from \"mdi-material-ui\";\nimport logo from \"./logo.svg\";\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      padding: spacing(0, 2),\n      backgroundColor: grey[300],\n      display: \"flex\",\n      alignItems: \"center\",\n      borderBottom: `1px solid ${grey[400]}`,\n    },\n    title: {\n      flex: 1,\n      marginLeft: spacing(1),\n      color: grey[700],\n    },\n    hide: {\n      display: \"none\",\n    },\n  });\n\ninterface Props {\n  className?: string;\n}\n\nconst Header = ({ classes, className }: Props & WithStyles<typeof styles>) => {\n  const [darkMode, setDarkMode] = useState(false);\n  return (\n    <div className={cx(classes.root, className)}>\n      <img alt=\"Codify logo\" src={logo} width={32} height={32} />\n      <Typography variant={\"h6\"} className={classes.title}>\n        Codify\n      </Typography>\n      <Tooltip title={\"Toggle light/dark theme\"} placement=\"bottom\">\n        <IconButton\n          className={classes.hide}\n          onClick={() => setDarkMode((mode) => !mode)}\n        >\n          {darkMode ? <Lightbulb /> : <LightbulbOutline />}\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={\"Github repository\"} placement=\"bottom\">\n        <IconButton\n          href={\"https://github.com/TeamWertarbyte/codify\"}\n          target={\"_blank\"}\n        >\n          <Github />\n        </IconButton>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","import React from \"react\";\nimport {\n  createStyles,\n  Divider,\n  Theme,\n  Typography,\n  WithStyles,\n  withStyles,\n} from \"@material-ui/core\";\nimport cx from \"classnames\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { version } from \"../package.json\";\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      padding: spacing(1, 2),\n      backgroundColor: grey[50],\n      display: \"flex\",\n      alignItems: \"center\",\n      borderTop: `1px solid ${grey[400]}`,\n    },\n    divider: {\n      margin: spacing(0, 1),\n      backgroundColor: grey[400],\n    },\n    version: {\n      flex: 1,\n    },\n  });\n\ninterface Props {\n  className?: string;\n}\n\nconst Footer = ({ classes, className }: Props & WithStyles<typeof styles>) => {\n  return (\n    <div className={cx(classes.root, className)}>\n      <Typography variant={\"caption\"} className={classes.version}>\n        Version {version}\n      </Typography>\n      <Typography variant={\"caption\"}>\n        Copyright © {new Date().getFullYear()}{\" \"}\n        <a\n          href={\"https://wertarbyte.com/\"}\n          target={\"_blank\"}\n          rel=\"noopener noreferrer\"\n        >\n          Wertarbyte GmbH\n        </a>\n      </Typography>\n      <Divider className={classes.divider} orientation={\"vertical\"} />\n      <Typography variant={\"caption\"}>\n        <a\n          href={\"https://wertarbyte.com/impressum\"}\n          target={\"_blank\"}\n          rel=\"noopener noreferrer\"\n        >\n          Imprint\n        </a>\n      </Typography>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Footer);\n","import React from \"react\";\nimport {\n  createStyles,\n  IconButton,\n  Popover,\n  Theme,\n  Tooltip,\n  WithStyles,\n  withStyles,\n} from \"@material-ui/core\";\n\nconst styles = ({ palette, spacing }: Theme) =>\n  createStyles({\n    root: {},\n    button: {},\n  });\n\ninterface Props {\n  children: JSX.Element;\n  id: string;\n  tooltip: string;\n  icon: React.ReactNode;\n}\n\nconst Picker = ({\n  children,\n  classes,\n  id,\n  icon,\n  tooltip,\n}: Props & WithStyles<typeof styles>) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  // @ts-ignore\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const popoverId = open ? `picker-${id}-popover` : undefined;\n\n  return (\n    <>\n      <Tooltip title={tooltip} placement=\"right\">\n        <IconButton\n          aria-describedby={popoverId}\n          className={classes.button}\n          onClick={handleClick}\n          color={open ? \"primary\" : \"default\"}\n        >\n          {icon}\n        </IconButton>\n      </Tooltip>\n      <Popover\n        id={popoverId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n      >\n        {children}\n      </Popover>\n    </>\n  );\n};\n\nexport default withStyles(styles)(Picker);\n","import React from \"react\";\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\nimport { ChromePicker } from \"react-color\";\nimport Picker from \"./Picker\";\n\nconst styles = ({ palette, spacing }: Theme) =>\n  createStyles({\n    root: {},\n    button: {},\n  });\n\ninterface Props {\n  color: string;\n  onChange: (color: string) => void;\n  id: string;\n  tooltip: string;\n  icon: React.ReactNode;\n}\n\nconst ColorPicker = ({\n  classes,\n  color,\n  onChange,\n  id,\n  icon,\n  tooltip,\n}: Props & WithStyles<typeof styles>) => {\n  return (\n    <Picker id={id} classes={classes} icon={icon} tooltip={tooltip}>\n      <ChromePicker color={color} onChange={(e) => onChange(e.hex)} />\n    </Picker>\n  );\n};\n\nexport default withStyles(styles)(ColorPicker);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  createStyles,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader,\n  Theme,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\";\nimport { monaco } from \"@monaco-editor/react\";\nimport Picker from \"./Picker\";\n\nconst styles = ({ palette }: Theme) =>\n  createStyles({\n    list: {\n      overflow: \"auto\",\n      maxHeight: 600,\n    },\n    listSubheader: {\n      backgroundColor: palette.background.paper,\n    },\n  });\n\ninterface Props {\n  id: string;\n  icon: React.ReactNode;\n  language: string;\n  onChange: (id: string) => void;\n  tooltip: string;\n}\n\nconst LanguagePicker = ({\n  classes,\n  id,\n  icon,\n  language,\n  onChange,\n  tooltip,\n}: Props & WithStyles<typeof styles>) => {\n  const [languages, setLanguages] = useState<{ id: string; alias: string }[]>(\n    []\n  );\n\n  useEffect(() => {\n    monaco\n      .init()\n      .then((monaco) => {\n        setLanguages(\n          monaco.languages.getLanguages().map(({ id, aliases }) => ({\n            id,\n            alias: aliases?.length ? aliases[0] : id,\n          }))\n        );\n      })\n      .catch((error) =>\n        console.error(\n          \"An error occurred during initialization of Monaco: \",\n          error\n        )\n      );\n  }, []);\n\n  return (\n    <Picker id={id} icon={icon} tooltip={tooltip}>\n      <List\n        className={classes.list}\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader\n            className={classes.listSubheader}\n            component=\"div\"\n            id=\"nested-list-subheader\"\n          >\n            Language\n          </ListSubheader>\n        }\n      >\n        {languages.map(({ id, alias }) => (\n          <ListItem\n            selected={id === language}\n            button\n            key={id}\n            onClick={() => onChange(id)}\n          >\n            <ListItemText>{alias}</ListItemText>\n          </ListItem>\n        ))}\n      </List>\n    </Picker>\n  );\n};\n\nexport default withStyles(styles)(LanguagePicker);\n","import React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\n\ninterface Props {\n  active: boolean;\n  onChange: (active: boolean) => void;\n  tooltip: string;\n  activeIcon: React.ReactNode;\n  inactiveIcon: React.ReactNode;\n}\n\nconst ToolbarToggle = ({\n  active,\n  activeIcon,\n  inactiveIcon,\n  onChange,\n  tooltip,\n}: Props) => {\n  return (\n    <Tooltip title={tooltip} placement=\"right\">\n      <IconButton onClick={() => onChange(!active)}>\n        {active ? activeIcon : inactiveIcon}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default ToolbarToggle;\n","import React from \"react\";\nimport {\n  createStyles,\n  IconButton,\n  Paper,\n  Theme,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\";\nimport {\n  Apple,\n  LinuxMint,\n  MicrosoftWindows,\n  MonitorClean,\n} from \"mdi-material-ui\";\nimport Picker from \"./Picker\";\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {},\n  });\n\ninterface Props {\n  id: string;\n  onChange: (os: \"macOS\" | \"windows10\" | \"linuxMint\") => void;\n}\n\nconst OSPicker = ({ id, onChange }: Props & WithStyles<typeof styles>) => {\n  return (\n    <Picker id={id} icon={<MonitorClean />} tooltip=\"Operating system\">\n      <Paper>\n        <IconButton onClick={() => onChange(\"windows10\")}>\n          <MicrosoftWindows />\n        </IconButton>\n        <IconButton onClick={() => onChange(\"linuxMint\")}>\n          <LinuxMint />\n        </IconButton>\n        <IconButton onClick={() => onChange(\"macOS\")}>\n          <Apple />\n        </IconButton>\n      </Paper>\n    </Picker>\n  );\n};\n\nexport default withStyles(styles)(OSPicker);\n","import React from \"react\";\nimport {\n  createStyles,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader,\n  Theme,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\";\nimport Picker from \"./Picker\";\n\nconst styles = ({ palette }: Theme) =>\n  createStyles({\n    list: {\n      overflow: \"auto\",\n      maxHeight: 600,\n    },\n    listSubheader: {\n      backgroundColor: palette.background.paper,\n    },\n  });\n\ninterface Props {\n  id: string;\n  icon: React.ReactNode;\n  fontFamily: string;\n  fontFamilies: string[];\n  onChange: (id: string) => void;\n  tooltip: string;\n}\n\nconst FontPicker = ({\n  classes,\n  id,\n  icon,\n  fontFamily,\n  fontFamilies,\n  onChange,\n  tooltip,\n}: Props & WithStyles<typeof styles>) => {\n  return (\n    <Picker id={id} icon={icon} tooltip={tooltip}>\n      <List\n        className={classes.list}\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader\n            className={classes.listSubheader}\n            component=\"div\"\n            id=\"nested-list-subheader\"\n          >\n            Font Family\n          </ListSubheader>\n        }\n      >\n        {fontFamilies.map((font) => (\n          <ListItem\n            selected={font === fontFamily}\n            button\n            key={font}\n            onClick={() => onChange(font)}\n          >\n            <ListItemText>{font}</ListItemText>\n          </ListItem>\n        ))}\n      </List>\n    </Picker>\n  );\n};\n\nexport default withStyles(styles)(FontPicker);\n","import React from \"react\";\nimport { Button, makeStyles, Paper } from \"@material-ui/core\";\nimport cx from \"classnames\";\nimport { Options } from \"../interfaces\";\nimport WindowHeader from \"./WindowHeader\";\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  root: {\n    padding: spacing(2),\n    borderRadius: 0,\n  },\n  editor: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    width: 200,\n    height: 80,\n  },\n  title: {\n    width: \"70%\",\n    height: spacing(2),\n    marginBottom: spacing(1),\n    borderRadius: spacing(2),\n    opacity: 0.35,\n  },\n}));\n\ninterface Props {\n  options: Options;\n  onClick: () => void;\n}\n\nconst TemplatePreview = ({ onClick, options }: Props) => {\n  const classes = useStyles();\n  const { fontColor, os } = options;\n\n  return (\n    <Button\n      onClick={onClick}\n      className={cx(classes.root)}\n      style={{\n        backgroundColor: options.backgroundColor,\n      }}\n      component={\"div\"}\n    >\n      <div>\n        <div className={classes.title} style={{ backgroundColor: fontColor }} />\n        <Paper className={cx(classes.editor)} elevation={1}>\n          <WindowHeader variant={os} />\n        </Paper>\n      </div>\n    </Button>\n  );\n};\n\nexport default TemplatePreview;\n","import React from \"react\";\nimport { createStyles, Paper, WithStyles, withStyles } from \"@material-ui/core\";\nimport Picker from \"./Picker\";\nimport { Options } from \"../interfaces\";\nimport TemplatePreview from \"./TemplatePreview\";\n\nconst styles = () =>\n  createStyles({\n    root: {},\n    button: {},\n    list: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"nowrap\",\n      overflow: \"auto\",\n    },\n  });\n\nconst templates: Options[] = [\n  {\n    backgroundColor: \"#FFB900\",\n    fontColor: \"#000000\",\n    showLineNumbers: false,\n    os: \"windows10\",\n    language: \"javascript\",\n    fontFamily: \"Roboto\",\n  },\n  {\n    backgroundColor: \"#78C5EF\",\n    fontColor: \"#000000\",\n    showLineNumbers: false,\n    os: \"macOS\",\n    language: \"javascript\",\n    fontFamily: \"Roboto\",\n  },\n  {\n    backgroundColor: \"#969696\",\n    fontColor: \"#000000\",\n    showLineNumbers: false,\n    os: \"linuxMint\",\n    language: \"javascript\",\n    fontFamily: \"Roboto\",\n  },\n];\n\ninterface Props {\n  onChange: (option: Options) => void;\n  id: string;\n  tooltip: string;\n  icon: React.ReactNode;\n}\n\nconst TemplatePicker = ({\n  classes,\n  onChange,\n  id,\n  icon,\n  tooltip,\n}: Props & WithStyles<typeof styles>) => {\n  return (\n    <Picker id={id} classes={classes} icon={icon} tooltip={tooltip}>\n      <Paper className={classes.list}>\n        {templates.map((template) => (\n          <TemplatePreview\n            onClick={() => onChange(template)}\n            options={template}\n          />\n        ))}\n      </Paper>\n    </Picker>\n  );\n};\n\nexport default withStyles(styles)(TemplatePicker);\n","import React from \"react\";\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\nimport cx from \"classnames\";\nimport { grey } from \"@material-ui/core/colors\";\nimport ColorPicker from \"./components/ColorPicker\";\nimport {\n  Alphabetical,\n  CodeBraces,\n  FileDocumentOutline,\n  FormatColorFill,\n  FormatColorText,\n  Text,\n} from \"mdi-material-ui\";\nimport LanguagePicker from \"./components/LanguagePicker\";\nimport ToolbarToggle from \"./components/ToolbarToggle\";\nimport { FormatListNumbers } from \"mdi-material-ui/light\";\nimport OSPicker from \"./components/OSPicker\";\nimport FontPicker from \"./components/FontPicker\";\nimport { Options } from \"./interfaces\";\nimport TemplatePicker from \"./components/TemplatePicker\";\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: grey[300],\n      padding: spacing(1),\n    },\n  });\n\nconst fontFamilies = [\"Segoe UI\", \"Roboto\", \"Arial\"];\n\ninterface Props {\n  className?: string;\n  onChange: (options: Options) => void;\n  options: Options;\n}\n\nconst Toolbar = ({\n  classes,\n  className,\n  onChange,\n  options,\n}: Props & WithStyles<typeof styles>) => {\n  return (\n    <div className={cx(classes.root, className)}>\n      <TemplatePicker\n        id=\"template\"\n        tooltip=\"Template\"\n        onChange={onChange}\n        icon={<FileDocumentOutline />}\n      />\n      <ColorPicker\n        id=\"background-color\"\n        tooltip=\"Background Color\"\n        color={options.backgroundColor}\n        onChange={(backgroundColor) =>\n          onChange({ ...options, backgroundColor })\n        }\n        icon={<FormatColorFill />}\n      />\n      <ColorPicker\n        id=\"font-color\"\n        tooltip=\"Text Color\"\n        color={options.fontColor}\n        onChange={(fontColor) => onChange({ ...options, fontColor })}\n        icon={<FormatColorText />}\n      />\n      <LanguagePicker\n        id=\"code-language\"\n        tooltip=\"Code language\"\n        language={options.language}\n        onChange={(language) => onChange({ ...options, language })}\n        icon={<CodeBraces />}\n      />\n      <ToolbarToggle\n        active={options.showLineNumbers}\n        tooltip=\"Line Numbers\"\n        onChange={(showLineNumbers) =>\n          onChange({ ...options, showLineNumbers })\n        }\n        activeIcon={<FormatListNumbers />}\n        inactiveIcon={<Text />}\n      />\n      <OSPicker\n        id={\"operating-system\"}\n        onChange={(os) => onChange({ ...options, os })}\n      />\n      <FontPicker\n        id=\"font-family\"\n        tooltip=\"Font family\"\n        fontFamily={options.fontFamily}\n        fontFamilies={fontFamilies}\n        onChange={(fontFamily) => onChange({ ...options, fontFamily })}\n        icon={<Alphabetical />}\n      />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Toolbar);\n","import React, { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { Fab, makeStyles, Theme } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\n// @ts-ignore\nimport domtoimage from \"dom-to-image-more\";\nimport { Download } from \"mdi-material-ui\";\nimport CaptureStage from \"./components/CaptureStage\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { Options } from \"./interfaces\";\nimport Toolbar from \"./Toolbar\";\n\nconst useStyles = makeStyles(({ spacing }: Theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  content: {\n    display: \"flex\",\n    flex: 1,\n    overflow: \"hidden\",\n    maxHeight: \"100%\",\n  },\n  captureStageContainer: {\n    flex: 1,\n    display: \"grid\",\n    placeItems: \"center\",\n    justifyItems: \"center\",\n    backgroundColor: grey[200],\n    borderLeft: `1px solid ${grey[400]}`,\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: spacing(6),\n    right: spacing(2),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const stageRef = useRef<HTMLElement>();\n  const [options, setOptions] = useState<Options>({\n    backgroundColor: \"#FFFFFF\",\n    fontColor: \"#000000\",\n    showLineNumbers: true,\n    os: \"windows10\",\n    language: \"javascript\",\n    fontFamily: \"Roboto\",\n  });\n\n  const handleGenerateImage = () => {\n    const scale = 2;\n    const elm = stageRef.current;\n    if (elm) {\n      domtoimage\n        .toJpeg(elm, {\n          height: elm.offsetHeight * scale,\n          style: {\n            transform: `scale(${scale}) translate(${\n              elm.offsetWidth / 2 / scale\n            }px, ${elm.offsetHeight / 2 / scale}px)`,\n          },\n          width: elm.offsetWidth * scale,\n          quality: 0.95,\n        })\n        .then((dataUrl: string) => {\n          const link = document.createElement(\"a\");\n          link.download = `codify-${Date.now()}.jpeg`;\n          link.href = dataUrl;\n          link.click();\n        });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <div className={classes.content}>\n        <Toolbar options={options} onChange={setOptions} />\n        <div className={classes.captureStageContainer}>\n          <CaptureStage ref={stageRef} options={options} />\n        </div>\n      </div>\n      <Fab\n        className={classes.fab}\n        onClick={handleGenerateImage}\n        color=\"primary\"\n      >\n        <Download />\n      </Fab>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {\n  unstable_createMuiStrictModeTheme,\n  CssBaseline,\n  MuiThemeProvider,\n  PaletteType,\n} from \"@material-ui/core\";\nimport { SnackbarProvider } from \"material-ui-snackbar-provider\";\n\nconst muiTheme = (themeType: PaletteType = \"light\") =>\n  unstable_createMuiStrictModeTheme({\n    palette: {\n      primary: {\n        main: \"#24796B\",\n      },\n      secondary: {\n        main: \"#348a31\",\n      },\n      error: {\n        main: \"#f44336\",\n      },\n      type: themeType,\n    },\n  });\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={muiTheme()}>\n      <CssBaseline />\n      <SnackbarProvider SnackbarProps={{ autoHideDuration: 4000 }}>\n        <App />\n      </SnackbarProvider>\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}