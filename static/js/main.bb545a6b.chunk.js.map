{"version":3,"sources":["logo.svg","components/WindowHeader.tsx","components/CodeEditor.tsx","components/CaptureStage.tsx","components/Picker.tsx","components/ColorPicker.tsx","components/ToolbarToggle.tsx","components/LanguagePicker.tsx","components/OSPicker.tsx","components/FontPicker.tsx","Header.tsx","Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","spacing","createStyles","root","display","macOS","backgroundColor","grey","backgroundImage","padding","windows10","justifyContent","linuxMint","macOSDivider","macButton","mintDivider","windowsDivider","dot","borderRadius","margin","height","width","green","yellow","red","square","spaceMint","spaceWindows","windowsClose","color","WindowHeader","className","variant","classes","cx","IconButton","size","style","fontSize","Divider","transform","flexDirection","overflow","marginBottom","content","flex","dark","CodeEditor","language","lightMode","os","showLineNumbers","Paper","elevation","theme","value","options","selectOnLineNumbers","lineNumbers","minimap","enabled","CaptureStage","React","forwardRef","ref","fontColor","fontFamily","Typography","gutterBottom","contentEditable","spellCheck","suppressContentEditableWarning","withStyles","palette","button","children","id","icon","tooltip","useState","anchorEl","setAnchorEl","open","Boolean","popoverId","undefined","Tooltip","title","placement","aria-describedby","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","onChange","e","hex","ToolbarToggle","active","activeIcon","inactiveIcon","formControl","minWidth","languages","setLanguages","useEffect","monaco","init","then","getLanguages","map","aliases","alias","length","catch","error","console","handleChange","target","FormControl","InputLabel","Select","labelId","label","index","MenuItem","key","fontFamilies","font","alignItems","borderBottom","marginLeft","alt","src","logo","href","borderTop","divider","version","Date","getFullYear","rel","orientation","toolbar","captureStageContainer","placeItems","justifyItems","borderLeft","fab","position","bottom","right","App","stageRef","useRef","setBackgroundColor","setFontColor","setShowLineNumbers","setLightMode","setOS","setLanguage","setFontFamily","Fab","domtoimage","toBlob","current","blob","saveAs","now","window","location","hostname","match","ReactDOM","render","StrictMode","themeType","unstable_createMuiStrictModeTheme","primary","main","secondary","type","muiTheme","CssBaseline","SnackbarProps","autoHideDuration","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bb545a6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.20d88375.svg\";","import React from \"react\";\nimport { createStyles, Divider, IconButton, Theme } from \"@material-ui/core\";\nimport cx from \"classnames\";\nimport { green, grey, red, yellow } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuSwap,\n  WindowMinimize,\n  SquareOutline,\n  WindowClose,\n  CloseCircle,\n} from \"mdi-material-ui\";\n\nconst useStyles = makeStyles(({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    macOS: {\n      backgroundColor: grey[300],\n      backgroundImage: `linear-gradient(to bottom, #cecece, #b7b7b7)`,\n      padding: spacing(1),\n    },\n    windows10: {\n      backgroundColor: \"#fff\",\n      justifyContent: \"flex-end\",\n    },\n    linuxMint: {\n      backgroundImage: `linear-gradient(to right, #444444, #303030)`,\n      justifyContent: \"flex-end\",\n      padding: spacing(0.5),\n    },\n    macOSDivider: {\n      backgroundColor: \"#141414\",\n    },\n    macButton: {\n      padding: spacing(0.25),\n    },\n    mintDivider: {\n      backgroundColor: \"#141414\",\n    },\n    windowsDivider: {\n      backgroundColor: grey[300],\n    },\n    dot: {\n      borderRadius: \"50%\",\n      margin: spacing(0.3),\n      height: spacing(1.125),\n      width: spacing(1.125),\n    },\n    green: {\n      backgroundColor: green[500],\n    },\n    yellow: {\n      backgroundColor: yellow[800],\n    },\n    red: {\n      backgroundColor: red[500],\n    },\n    square: {\n      borderRadius: 0,\n      padding: spacing(1, 2, 1, 2),\n    },\n    spaceMint: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: spacing(10),\n    },\n    spaceWindows: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: spacing(20),\n    },\n    windowsClose: {\n      \"&:hover\": {\n        backgroundColor: red[500],\n        color: \"white\",\n      },\n    },\n  })\n);\n\ninterface Props {\n  className?: string;\n  variant?: \"macOS\" | \"windows10\" | \"linuxMint\";\n}\n\nconst WindowHeader = ({ className, variant }: Props) => {\n  const classes = useStyles();\n\n  switch (variant) {\n    case \"macOS\":\n      return (\n        <div className={cx(classes.root, classes.macOS, className)}>\n          <IconButton className={classes.macButton}>\n            <div className={cx(classes.dot, classes.red)} />\n          </IconButton>\n          <IconButton className={classes.macButton}>\n            <div className={cx(classes.dot, classes.yellow)} />\n          </IconButton>\n          <IconButton className={classes.macButton}>\n            <div className={cx(classes.dot, classes.green)} />\n          </IconButton>\n        </div>\n      );\n    case \"windows10\":\n      return (\n        <>\n          <div className={cx(classes.root, classes.windows10, className)}>\n            <div className={classes.spaceWindows}>\n              <IconButton size={\"small\"} className={classes.square}>\n                <WindowMinimize style={{ fontSize: 18 }} />\n              </IconButton>\n              <IconButton size={\"small\"} className={classes.square}>\n                <SquareOutline style={{ fontSize: 16 }} />\n              </IconButton>\n              <IconButton\n                size={\"small\"}\n                className={cx(classes.square, classes.windowsClose)}\n              >\n                <WindowClose style={{ fontSize: 18 }} />\n              </IconButton>\n            </div>\n          </div>\n          <Divider className={classes.windowsDivider} />\n        </>\n      );\n    case \"linuxMint\":\n      return (\n        <>\n          <div className={cx(classes.root, classes.linuxMint, className)}>\n            <div className={classes.spaceMint}>\n              <IconButton size={\"small\"}>\n                <WindowMinimize\n                  fontSize={\"small\"}\n                  style={{ color: \"#878787\", fontSize: 14 }}\n                />\n              </IconButton>\n              <IconButton size={\"small\"}>\n                <MenuSwap\n                  fontSize={\"small\"}\n                  style={{\n                    color: \"#878787\",\n                    fontSize: 18,\n                    transform: `rotate(45deg)`,\n                  }}\n                />\n              </IconButton>\n              <IconButton size={\"small\"}>\n                <CloseCircle style={{ color: \"#78b375\", fontSize: 14 }} />\n              </IconButton>\n            </div>\n          </div>\n          <Divider className={classes.mintDivider} />\n        </>\n      );\n    default:\n      return <div className={cx(classes.root, className)} />;\n  }\n};\n\nexport default WindowHeader;\n","import React from \"react\";\nimport { Paper, makeStyles, Theme } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport Editor from \"@monaco-editor/react\";\nimport WindowHeader from \"./WindowHeader\";\nimport cx from \"classnames\";\n\nconst useStyles = makeStyles(({ spacing }: Theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    width: 700,\n    height: 320,\n    backgroundColor: grey[700],\n    marginBottom: spacing(2),\n  },\n  content: {\n    flex: 1,\n  },\n  dark: {\n    backgroundColor: \"#54799D\",\n  },\n}));\n\ninterface Props {\n  language: string;\n  lightMode: boolean;\n  os: \"macOS\" | \"windows10\" | \"linuxMint\";\n  showLineNumbers: boolean;\n}\n\nconst CodeEditor = ({ language, lightMode, os, showLineNumbers }: Props) => {\n  const classes = useStyles();\n\n  return (\n    <Paper\n      className={cx(classes.root, { [classes.dark]: !lightMode })}\n      elevation={15}\n    >\n      <WindowHeader variant={os} />\n      <div className={classes.content}>\n        <Editor\n          height={\"300px\"}\n          width={\"700px\"}\n          language={language}\n          theme={lightMode ? \"light\" : \"dark\"}\n          value={`const fun = () => {\n  console.log(\"Hello World!\")\n}`}\n          options={{\n            selectOnLineNumbers: false,\n            lineNumbers: showLineNumbers ? \"on\" : \"off\",\n            minimap: { enabled: false },\n          }}\n        />\n      </div>\n    </Paper>\n  );\n};\n\nexport default CodeEditor;\n","import React from \"react\";\nimport { Paper, makeStyles, Typography } from \"@material-ui/core\";\nimport cx from \"classnames\";\nimport CodeEditor from \"./CodeEditor\";\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  root: {\n    padding: spacing(8),\n  },\n}));\n\ninterface Props {\n  className?: string;\n  backgroundColor: string;\n  fontColor: string;\n  fontFamily: string;\n  language: string;\n  lightMode: boolean;\n  os: \"macOS\" | \"windows10\" | \"linuxMint\";\n  showLineNumbers: boolean;\n}\n\nconst CaptureStage = React.forwardRef(\n  (\n    {\n      backgroundColor,\n      className,\n      fontColor,\n      fontFamily,\n      language,\n      lightMode,\n      os,\n      showLineNumbers,\n    }: Props,\n    ref\n  ) => {\n    const classes = useStyles();\n\n    return (\n      <Paper\n        ref={ref}\n        className={cx(classes.root, className)}\n        elevation={10}\n        square\n        style={{\n          backgroundColor,\n        }}\n      >\n        <Typography\n          variant={\"h3\"}\n          gutterBottom\n          contentEditable\n          spellCheck={false}\n          suppressContentEditableWarning\n          style={{ color: fontColor, fontFamily: fontFamily }}\n        >\n          Edit this cool title\n        </Typography>\n        <CodeEditor\n          language={language}\n          lightMode={lightMode}\n          os={os}\n          showLineNumbers={showLineNumbers}\n        />\n      </Paper>\n    );\n  }\n);\n\nexport default CaptureStage;\n","import React from \"react\";\nimport {\n  createStyles,\n  IconButton,\n  Popover,\n  Theme,\n  Tooltip,\n  WithStyles,\n  withStyles,\n} from \"@material-ui/core\";\n\nconst styles = ({ palette, spacing }: Theme) =>\n  createStyles({\n    root: {},\n    button: {},\n  });\n\ninterface Props {\n  children: JSX.Element;\n  id: string;\n  tooltip: string;\n  icon: React.ReactNode;\n}\n\nconst Picker = ({\n  children,\n  classes,\n  id,\n  icon,\n  tooltip,\n}: Props & WithStyles<typeof styles>) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  // @ts-ignore\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const popoverId = open ? `picker-${id}-popover` : undefined;\n\n  return (\n    <>\n      <Tooltip title={tooltip} placement=\"right\">\n        <IconButton\n          aria-describedby={popoverId}\n          className={classes.button}\n          onClick={handleClick}\n          color={open ? \"primary\" : \"default\"}\n        >\n          {icon}\n        </IconButton>\n      </Tooltip>\n      <Popover\n        id={popoverId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"center\",\n          horizontal: \"left\",\n        }}\n      >\n        {children}\n      </Popover>\n    </>\n  );\n};\n\nexport default withStyles(styles)(Picker);\n","import React from \"react\";\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\nimport { ChromePicker } from \"react-color\";\nimport Picker from \"./Picker\";\n\nconst styles = ({ palette, spacing }: Theme) =>\n  createStyles({\n    root: {},\n    button: {},\n  });\n\ninterface Props {\n  color: string;\n  onChange: (color: string) => void;\n  id: string;\n  tooltip: string;\n  icon: React.ReactNode;\n}\n\nconst ColorPicker = ({\n  classes,\n  color,\n  onChange,\n  id,\n  icon,\n  tooltip,\n}: Props & WithStyles<typeof styles>) => {\n  return (\n    <Picker id={id} classes={classes} icon={icon} tooltip={tooltip}>\n      <ChromePicker color={color} onChange={(e) => onChange(e.hex)} />\n    </Picker>\n  );\n};\n\nexport default withStyles(styles)(ColorPicker);\n","import React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\n\ninterface Props {\n  active: boolean;\n  onChange: (active: boolean) => void;\n  tooltip: string;\n  activeIcon: React.ReactNode;\n  inactiveIcon: React.ReactNode;\n}\n\nconst ToolbarToggle = ({\n  active,\n  activeIcon,\n  inactiveIcon,\n  onChange,\n  tooltip,\n}: Props) => {\n  return (\n    <Tooltip title={tooltip} placement=\"right\">\n      <IconButton onClick={() => onChange(!active)}>\n        {active ? activeIcon : inactiveIcon}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default ToolbarToggle;\n","import React, { ChangeEvent, ReactNode, useEffect, useState } from \"react\";\nimport {\n  createStyles,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Theme,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\";\nimport Picker from \"./Picker\";\nimport { monaco } from \"@monaco-editor/react\";\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    formControl: {\n      margin: spacing(1),\n      minWidth: 120,\n    },\n  });\n\ninterface Props {\n  id: string;\n  icon: React.ReactNode;\n  language: string;\n  onChange: (id: string) => void;\n  tooltip: string;\n}\n\nconst LanguagePicker = ({\n  classes,\n  id,\n  icon,\n  language,\n  onChange,\n  tooltip,\n}: Props & WithStyles<typeof styles>) => {\n  const [languages, setLanguages] = useState<{ id: string; alias: string }[]>(\n    []\n  );\n\n  useEffect(() => {\n    monaco\n      .init()\n      .then((monaco) => {\n        setLanguages(\n          monaco.languages.getLanguages().map(({ id, aliases }) => ({\n            id,\n            alias: aliases?.length ? aliases[0] : id,\n          }))\n        );\n      })\n      .catch((error) =>\n        console.error(\n          \"An error occurred during initialization of Monaco: \",\n          error\n        )\n      );\n  }, []);\n\n  const handleChange = (event: ChangeEvent<ReactNode>) => {\n    const target = event.target as HTMLSelectElement;\n    onChange(target.value);\n  };\n\n  return (\n    <Picker id={id} icon={icon} tooltip={tooltip}>\n      <FormControl className={classes.formControl} variant={\"outlined\"}>\n        <InputLabel id={\"language-select-label\"}>Language</InputLabel>\n        <Select\n          labelId=\"language-select-label\"\n          id=\"language-select\"\n          onChange={(event) => handleChange(event)}\n          value={language}\n          label=\"Language\"\n        >\n          {languages.map(({ id, alias }, index) => (\n            <MenuItem key={id} value={id}>\n              {alias}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Picker>\n  );\n};\n\nexport default withStyles(styles)(LanguagePicker);\n","import React from \"react\";\nimport {\n  createStyles,\n  IconButton,\n  Paper,\n  Theme,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\";\nimport {\n  Apple,\n  LinuxMint,\n  MicrosoftWindows,\n  MonitorClean,\n} from \"mdi-material-ui\";\nimport Picker from \"./Picker\";\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {},\n  });\n\ninterface Props {\n  id: string;\n  onChange: (os: \"macOS\" | \"windows10\" | \"linuxMint\") => void;\n}\n\nconst OSPicker = ({ id, onChange }: Props & WithStyles<typeof styles>) => {\n  return (\n    <Picker id={id} icon={<MonitorClean />} tooltip=\"Operating system\">\n      <Paper>\n        <IconButton onClick={() => onChange(\"windows10\")}>\n          <MicrosoftWindows />\n        </IconButton>\n        <IconButton onClick={() => onChange(\"linuxMint\")}>\n          <LinuxMint />\n        </IconButton>\n        <IconButton onClick={() => onChange(\"macOS\")}>\n          <Apple />\n        </IconButton>\n      </Paper>\n    </Picker>\n  );\n};\n\nexport default withStyles(styles)(OSPicker);\n","import React, { ChangeEvent, ReactNode } from \"react\";\nimport {\n  createStyles,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Theme,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\";\nimport Picker from \"./Picker\";\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    formControl: {\n      margin: spacing(1),\n      minWidth: 120,\n    },\n  });\n\ninterface Props {\n  id: string;\n  icon: React.ReactNode;\n  fontFamily: string;\n  fontFamilies: string[];\n  onChange: (id: string) => void;\n  tooltip: string;\n}\n\nconst FontPicker = ({\n  classes,\n  id,\n  icon,\n  fontFamily,\n  fontFamilies,\n  onChange,\n  tooltip,\n}: Props & WithStyles<typeof styles>) => {\n  const handleChange = (event: ChangeEvent<ReactNode>) => {\n    const target = event.target as HTMLSelectElement;\n    onChange(target.value);\n  };\n\n  return (\n    <Picker id={id} icon={icon} tooltip={tooltip}>\n      <FormControl className={classes.formControl} variant={\"outlined\"}>\n        <InputLabel id={\"font-select-label\"}>Font Family</InputLabel>\n        <Select\n          labelId=\"font-select-label\"\n          id=\"font-select\"\n          onChange={(event) => handleChange(event)}\n          value={fontFamily}\n          label=\"Font Family\"\n        >\n          {fontFamilies.map((font, index) => (\n            <MenuItem key={`${font}-${index}`} value={font}>\n              {font}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Picker>\n  );\n};\n\nexport default withStyles(styles)(FontPicker);\n","import React from \"react\";\nimport {\n  createStyles,\n  IconButton,\n  Theme,\n  Typography,\n  WithStyles,\n  withStyles,\n} from \"@material-ui/core\";\nimport cx from \"classnames\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { Github } from \"mdi-material-ui\";\nimport logo from \"./logo.svg\";\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      padding: spacing(0, 2),\n      backgroundColor: grey[300],\n      display: \"flex\",\n      alignItems: \"center\",\n      borderBottom: `1px solid ${grey[400]}`,\n    },\n    title: {\n      flex: 1,\n      marginLeft: spacing(1),\n    },\n  });\n\ninterface Props {\n  className?: string;\n}\n\nconst Header = ({ classes, className }: Props & WithStyles<typeof styles>) => {\n  return (\n    <div className={cx(classes.root, className)}>\n      <img alt=\"Codify logo\" src={logo} width={32} height={32} />\n      <Typography variant={\"h6\"} className={classes.title}>\n        Codify\n      </Typography>\n      <IconButton\n        href={\"https://github.com/TeamWertarbyte/codify\"}\n        target={\"_blank\"}\n      >\n        <Github />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","import React from \"react\";\nimport {\n  createStyles,\n  Divider,\n  Theme,\n  Typography,\n  WithStyles,\n  withStyles,\n} from \"@material-ui/core\";\nimport cx from \"classnames\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { version } from \"../package.json\";\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      padding: spacing(1, 2),\n      backgroundColor: grey[50],\n      display: \"flex\",\n      alignItems: \"center\",\n      borderTop: `1px solid ${grey[400]}`,\n    },\n    divider: {\n      margin: spacing(0, 1),\n      backgroundColor: grey[400],\n    },\n    version: {\n      flex: 1,\n    },\n  });\n\ninterface Props {\n  className?: string;\n}\n\nconst Footer = ({ classes, className }: Props & WithStyles<typeof styles>) => {\n  return (\n    <div className={cx(classes.root, className)}>\n      <Typography variant={\"caption\"} className={classes.version}>\n        Version {version}\n      </Typography>\n      <Typography variant={\"caption\"}>\n        Copyright © {new Date().getFullYear()}{\" \"}\n        <a\n          href={\"https://wertarbyte.com/\"}\n          target={\"_blank\"}\n          rel=\"noopener noreferrer\"\n        >\n          Wertarbyte GmbH\n        </a>\n      </Typography>\n      <Divider className={classes.divider} orientation={\"vertical\"} />\n      <Typography variant={\"caption\"}>\n        <a\n          href={\"https://wertarbyte.com/impressum\"}\n          target={\"_blank\"}\n          rel=\"noopener noreferrer\"\n        >\n          Imprint\n        </a>\n      </Typography>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Footer);\n","import React, { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { Fab, makeStyles, Theme } from \"@material-ui/core\";\nimport { saveAs } from \"file-saver\";\nimport { grey } from \"@material-ui/core/colors\";\n// @ts-ignore\nimport domtoimage from \"dom-to-image-more\";\nimport {\n  Alphabetical,\n  CodeBraces,\n  Download,\n  FormatColorFill,\n  FormatColorText,\n  Lightbulb,\n  LightbulbOutline,\n  Text,\n} from \"mdi-material-ui\";\nimport CaptureStage from \"./components/CaptureStage\";\nimport ColorPicker from \"./components/ColorPicker\";\nimport ToolbarToggle from \"./components/ToolbarToggle\";\nimport { FormatListNumbers } from \"mdi-material-ui/light\";\nimport LanguagePicker from \"./components/LanguagePicker\";\nimport OSPicker from \"./components/OSPicker\";\nimport FontPicker from \"./components/FontPicker\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nconst useStyles = makeStyles(({ spacing }: Theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  content: {\n    display: \"flex\",\n    flex: 1,\n  },\n  toolbar: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: grey[300],\n    padding: spacing(1),\n  },\n  captureStageContainer: {\n    flex: 1,\n    display: \"grid\",\n    placeItems: \"center\",\n    justifyItems: \"center\",\n    backgroundColor: grey[200],\n    borderLeft: `1px solid ${grey[400]}`,\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: spacing(6),\n    right: spacing(2),\n  },\n  options: {\n    padding: spacing(1),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const stageRef = useRef();\n  const [backgroundColor, setBackgroundColor] = useState(\"#FFFFFF\");\n  const [fontColor, setFontColor] = useState(\"#000000\");\n  const [showLineNumbers, setShowLineNumbers] = useState(true);\n  const [lightMode, setLightMode] = useState(true);\n  const [os, setOS] = useState<\"macOS\" | \"windows10\" | \"linuxMint\">(\n    \"windows10\"\n  );\n  const [language, setLanguage] = useState<string>(\"javascript\");\n\n  const fontFamilies = [\"Segoe UI\", \"Roboto\", \"Arial\"];\n  const [fontFamily, setFontFamily] = useState<string>(fontFamilies[1]);\n\n  const handleGenerateImage = () => {\n    domtoimage.toBlob(stageRef.current).then((blob: Blob) => {\n      saveAs(blob, `codify-${Date.now()}.png`);\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <div className={classes.content}>\n        <div className={classes.toolbar}>\n          <ColorPicker\n            id=\"background-color\"\n            tooltip=\"Background Color\"\n            color={backgroundColor}\n            onChange={setBackgroundColor}\n            icon={<FormatColorFill />}\n          />\n          <ColorPicker\n            id=\"font-color\"\n            tooltip=\"Text Color\"\n            color={fontColor}\n            onChange={setFontColor}\n            icon={<FormatColorText />}\n          />\n          <LanguagePicker\n            id=\"code-language\"\n            tooltip=\"Code language\"\n            language={language}\n            onChange={setLanguage}\n            icon={<CodeBraces />}\n          />\n          <ToolbarToggle\n            active={showLineNumbers}\n            tooltip=\"Line Numbers\"\n            onChange={setShowLineNumbers}\n            activeIcon={<FormatListNumbers />}\n            inactiveIcon={<Text />}\n          />\n          <ToolbarToggle\n            active={lightMode}\n            tooltip={lightMode ? \"Dark Mode\" : \"Light Mode\"}\n            onChange={(lightMode) => {\n              setLightMode(lightMode);\n              if (lightMode === false) {\n                setBackgroundColor(\"#383839\");\n                setFontColor(\"#d3d3d3\");\n              }\n            }}\n            activeIcon={<LightbulbOutline />}\n            inactiveIcon={<Lightbulb />}\n          />\n          <OSPicker id={\"operating-system\"} onChange={setOS} />\n          <FontPicker\n            id=\"font-family\"\n            tooltip=\"Font family\"\n            fontFamily={fontFamily}\n            fontFamilies={fontFamilies}\n            onChange={setFontFamily}\n            icon={<Alphabetical />}\n          />\n        </div>\n        <div className={classes.captureStageContainer}>\n          <CaptureStage\n            ref={stageRef}\n            backgroundColor={backgroundColor}\n            fontColor={fontColor}\n            fontFamily={fontFamily}\n            language={language}\n            lightMode={lightMode}\n            os={os}\n            showLineNumbers={showLineNumbers}\n          />\n        </div>\n      </div>\n      <Footer />\n      <Fab\n        className={classes.fab}\n        onClick={handleGenerateImage}\n        color=\"primary\"\n      >\n        <Download />\n      </Fab>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {\n  unstable_createMuiStrictModeTheme,\n  CssBaseline,\n  MuiThemeProvider,\n  PaletteType,\n} from \"@material-ui/core\";\nimport { SnackbarProvider } from \"material-ui-snackbar-provider\";\n\nconst muiTheme = (themeType: PaletteType = \"light\") =>\n  unstable_createMuiStrictModeTheme({\n    palette: {\n      primary: {\n        main: \"#24796B\",\n      },\n      secondary: {\n        main: \"#348a31\",\n      },\n      error: {\n        main: \"#f44336\",\n      },\n      type: themeType,\n    },\n  });\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={muiTheme()}>\n      <CssBaseline />\n      <SnackbarProvider SnackbarProps={{ autoHideDuration: 4000 }}>\n        <App />\n      </SnackbarProvider>\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}